/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.mt-auto {
  margin-top: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.w-full {
  width: 100%;
}
.flex-1 {
  flex: 1;
}
.rotate-180 {
  rotate: 180deg;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.cursor-pointer {
  cursor: pointer;
}
.list-inside {
  list-style-position: inside;
}
.list-disc {
  list-style-type: disc;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-l-4 {
  border-left-style: var(--tw-border-style);
  border-left-width: 4px;
}
.border-\[\#7C2E3D\] {
  border-color: #7C2E3D;
}
.bg-\[\#2D2D2D\] {
  background-color: #2D2D2D;
}
.bg-\[\#7C2E3D\] {
  background-color: #7C2E3D;
}
.bg-\[\#888\] {
  background-color: #888;
}
.bg-\[\#F8F5F0\] {
  background-color: #F8F5F0;
}
.bg-\[\#f0eae2\] {
  background-color: #f0eae2;
}
.bg-\[\#f7f3ef\] {
  background-color: #f7f3ef;
}
.bg-\[\#f8f5f0\] {
  background-color: #f8f5f0;
}
.bg-cover {
  background-size: cover;
}
.bg-center {
  background-position: center;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.object-contain {
  object-fit: contain;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.font-\[Poppins\] {
  font-family: Poppins;
}
.text-\[\#2D2D2D\] {
  color: #2D2D2D;
}
.text-\[\#7C2E3D\] {
  color: #7C2E3D;
}
.opacity-0 {
  opacity: 0%;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.group-hover\:opacity-100 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.hover\:scale-105 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:bg-\[\#5f1f2e\] {
  &:hover {
    @media (hover: hover) {
      background-color: #5f1f2e;
    }
  }
}
.hover\:bg-\[\#888\] {
  &:hover {
    @media (hover: hover) {
      background-color: #888;
    }
  }
}
.hover\:bg-\[\#f0eae2\] {
  &:hover {
    @media (hover: hover) {
      background-color: #f0eae2;
    }
  }
}
.hover\:text-\[\#0A66C2\] {
  &:hover {
    @media (hover: hover) {
      color: #0A66C2;
    }
  }
}
.hover\:text-\[\#7C2E3D\] {
  &:hover {
    @media (hover: hover) {
      color: #7C2E3D;
    }
  }
}
.hover\:text-\[\#E1306C\] {
  &:hover {
    @media (hover: hover) {
      color: #E1306C;
    }
  }
}
.hover\:text-\[\#FF0050\] {
  &:hover {
    @media (hover: hover) {
      color: #FF0050;
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
